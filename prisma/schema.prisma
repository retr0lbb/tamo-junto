// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  addressInfo String?

  stripeID String? @unique

  campaing Campaing[]
  Donations Donation[]

  UserAchievedMilestone UserAchievedMilestone[]

  Address Address? @relation(fields: [Addressid], references: [id])
  Addressid Int?
}

model Address{
  id Int @id @default(autoincrement())
  country String
  state String
  city String
  streetName String
  streetNumber String

  User User[]
}



model Donation{
  id String @id @default(uuid())
  donationDate DateTime @default(now())
  donationAmmount Decimal

  status Boolean @default(false)

  User User? @relation(fields: [Userid], references: [id])
  Userid String?

  Campaing Campaing? @relation(fields: [Campaingid], references: [id], onDelete: Cascade)
  Campaingid String?
}

model Campaing{
  id String @id @default(uuid())
  name String
  goal Decimal

  donations Donation[]
  milestones Milestone[]


  User User? @relation(fields: [Userid], references: [id], onDelete: Cascade)
  Userid String?
}

model Prize{
  id String @id @default(uuid())
  title String
  description String
  isShippingPrize Boolean @default(false)
  uri String

  Milestone Milestone? @relation(fields: [Milestoneid], references: [id], onDelete: Cascade)
  Milestoneid String?
}

model Milestone{
  id String @id @default(uuid())
  name String
  description String?
  objectiveAmmount Decimal
  minDonation Decimal
  isCompleted Boolean @default(false)

  prize Prize[]

  Campaing Campaing? @relation(fields: [Campaingid], references: [id], onDelete: Cascade)
  Campaingid String?

  UserAchievedMilestone UserAchievedMilestone[]
  @@unique([objectiveAmmount, Campaingid], name: "campaing_milestone_cap")
}


model UserAchievedMilestone{
  id String @id @default(uuid())
  achivedMilestoneAtDate DateTime @default(now())

  User User? @relation(fields: [Userid], references: [id], onDelete: Cascade)
  Userid String?

  Milestone Milestone? @relation(fields: [Milestoneid], references: [id], onDelete: Cascade)
  Milestoneid String?

  @@unique([Userid, Milestoneid], name: "unique_user_milestone")
}


